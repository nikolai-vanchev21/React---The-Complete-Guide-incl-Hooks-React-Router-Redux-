{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikol\\\\Documents\\\\React\\\\useEffect Hook\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input\";\n\n// const emailReducer = (state, action) => {\n//   if (action.type === \"USER_INPUT\") {\n//     return { value: action.val, isValid: action.val.includes(\"@\") };\n//   }\n//   if (action.type === \"INPUT_BLUR\") {\n//     return { value: state.value, isValid: state.value.includes(\"@\") };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const passwordReducer = (state, action) => {\n//   if (action.type === \"USER_INPUT\") {\n//     return { value: action.val, isValid: action.val.trim().length > 6 };\n//   }\n//   if (action.type === \"INPUT_BLUR\") {\n//     return { value: state.value, isValid: state.value.trim().length > 6 };\n//   }\n//   return { value: \"\", isValid: false };\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formReducer = (state, action) => {\n  if (action.type === \"USER_INPUT_EMAIL\") {\n    return {\n      emailValue: action.val,\n      emailIsValid: action.val.includes(\"@\"),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordIsValid\n    };\n  }\n  if (action.type === \"EMAIL_INPUT_BLUR\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailValue.includes(\"@\"),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordIsValid\n    };\n  }\n  if (action.type === \"USER_INPUT_PASSWORD\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: action.val,\n      passwordIsValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === \"PASSWORD_INPUT_BLUR\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordValue.trim().length > 6\n    };\n  }\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [formState, dispatchForm] = useReducer(formReducer, {\n    emailValue: \"\",\n    passwordValue: \"\",\n    passwordIsValid: null,\n    emailIsValid: null\n  });\n  const AuthCtx = useContext(AuthContext);\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    emailIsValid: emailIsValid\n  } = formState;\n  const {\n    passwordIsValid: passwordIsValid\n  } = formState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checkin for validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"CLEAN UP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    dispatchForm({\n      type: \"USER_INPUT_EMAIL\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchForm({\n      type: \"USER_INPUT_PASSWORD\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchForm({\n      type: \"EMAIL_INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchForm({\n      type: \"PASSWORD_INPUT_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    AuthCtx.onLogIn(formState.emailValue, formState.passwordValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        inputStyle: classes.con,\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${formState.passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: formState.passwordValue,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"nd3nTdmzScFcocTjYUL2TdJvF8o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Card","classes","Button","AuthContext","Input","formReducer","state","action","type","emailValue","val","emailIsValid","includes","passwordValue","passwordIsValid","trim","length","Login","props","formIsValid","setFormIsValid","formState","dispatchForm","AuthCtx","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogIn","login","con","control","invalid","actions","btn"],"sources":["C:/Users/nikol/Documents/React/useEffect Hook/src/components/Login/Login.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input\";\n\n// const emailReducer = (state, action) => {\n//   if (action.type === \"USER_INPUT\") {\n//     return { value: action.val, isValid: action.val.includes(\"@\") };\n//   }\n//   if (action.type === \"INPUT_BLUR\") {\n//     return { value: state.value, isValid: state.value.includes(\"@\") };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\n// const passwordReducer = (state, action) => {\n//   if (action.type === \"USER_INPUT\") {\n//     return { value: action.val, isValid: action.val.trim().length > 6 };\n//   }\n//   if (action.type === \"INPUT_BLUR\") {\n//     return { value: state.value, isValid: state.value.trim().length > 6 };\n//   }\n//   return { value: \"\", isValid: false };\n// };\n\nconst formReducer = (state, action) => {\n  \n  if (action.type === \"USER_INPUT_EMAIL\") {\n    return {\n      emailValue: action.val,\n      emailIsValid: action.val.includes(\"@\"),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordIsValid,\n    };\n  }\n\n  if (action.type === \"EMAIL_INPUT_BLUR\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailValue.includes(\"@\"),\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordIsValid,\n    };\n  }\n\n  if (action.type === \"USER_INPUT_PASSWORD\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: action.val,\n      passwordIsValid: action.val.trim().length > 6,\n    };\n  }\n\n  if (action.type === \"PASSWORD_INPUT_BLUR\") {\n    return {\n      emailValue: state.emailValue,\n      emailIsValid: state.emailIsValid,\n      passwordValue: state.passwordValue,\n      passwordIsValid: state.passwordValue.trim().length > 6,\n    };\n  }\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [formState, dispatchForm] = useReducer(formReducer, {\n    emailValue: \"\",\n    passwordValue: \"\",\n    passwordIsValid: null,\n    emailIsValid: null,\n  });\n\n  const AuthCtx=useContext(AuthContext)\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  \n\n  const { emailIsValid: emailIsValid } = formState;\n\n  const { passwordIsValid: passwordIsValid } = formState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checkin for validity\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEAN UP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchForm({ type: \"USER_INPUT_EMAIL\", val: event.target.value });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchForm({ type: \"USER_INPUT_PASSWORD\", val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchForm({ type: \"EMAIL_INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchForm({ type: \"PASSWORD_INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    AuthCtx.onLogIn(formState.emailValue, formState.passwordValue);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n        inputStyle={classes.con}>\n        E-mail\n        </Input>\n        <div\n          className={`${classes.control} ${\n            formState.passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={formState.passwordValue}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}