{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikol\\\\Documents\\\\React\\\\useEffect Hook\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginHandler","email","password","logoutHandler","onLogout"],"sources":["C:/Users/nikol/Documents/React/useEffect Hook/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n   \n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    \n    setIsLoggedIn(false);\n  };\n\n  return (\n    <>\n      <AuthContext.Provider\n        value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n      >\n        <MainHeader />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,sBAAsB;AAAC;AAAA;AAE/C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAInD,MAAMQ,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;;IAEAH,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMI,aAAa,GAAG,MAAM;IAE1BJ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACE;IAAA,uBACE,QAAC,WAAW,CAAC,QAAQ;MACnB,KAAK,EAAE;QAAED,UAAU,EAAEA,UAAU;QAAEM,QAAQ,EAAED;MAAc,CAAE;MAAA,wBAE3D,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd;QAAA,WACG,CAACL,UAAU,iBAAI,QAAC,KAAK;UAAC,OAAO,EAAEE;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,EAC/CF,UAAU,iBAAI,QAAC,IAAI;UAAC,QAAQ,EAAEK;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA;EACc,iBACtB;AAEP;AAAC,GA9BQN,GAAG;AAAA,KAAHA,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}